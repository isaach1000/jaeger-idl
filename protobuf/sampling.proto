// Copyright (c) 2017 Uber Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";
package jaegertracing.protobuf.sampling_manager;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

option (gogoproto.testgen_all) = true;
option (gogoproto.benchgen_all) = true;

message ProbabilisticSamplingStrategy { double sampling_rate = 1; }

message RateLimitingSamplingStrategy { int32 max_traces_per_seconds = 1; }

message PerOperationSamplingStrategy {
  message OperationSamplingStrategy {
    string operation = 1;
    oneof strategy {
      ProbabilisticSamplingStrategy probabilistic = 2;
      RateLimitingSamplingStrategy rate_limiting = 3;
    }
  }

  double default_sampling_probability = 1;
  double default_lower_bound_traces_per_second = 2;
  double default_upper_bound_traces_per_second = 3;
  repeated OperationSamplingStrategy per_operation_strategy = 4;
}

message SamplingStrategyRequest { string service_name = 1; }

message SamplingStrategyResponse {
  oneof strategy {
    ProbabilisticSamplingStrategy probabilistic = 1;
    RateLimitingSamplingStrategy rate_limiting = 2;
    PerOperationSamplingStrategy per_operation = 3;
  }
}

service SamplingManager {
  rpc GetSamplingStrategy(stream SamplingStrategyRequest)
      returns (stream SamplingStrategyResponse);
}
